name: Release

on:
  push:
    branches:
      - master

jobs:
  eslint:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repo
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Install npm dependencies
        run: npm ci

      - run: npm run eslint

  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repo
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Install npm dependencies
        run: npm ci

      - name: Build
        env:
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_API_TOKEN: ${{ secrets.CONTENTFUL_API_TOKEN }}
          CONTENTFUL_PREVIEW_TOKEN: ${{ secrets.CONTENTFUL_PREVIEW_TOKEN }}
          URL: http://localhost:5000
        run: npm run build

  release:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    name: Release
    runs-on: ubuntu-latest
    needs: [eslint, build]
    steps:
      - name: Clone Repo
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Install npm dependencies
        run: npm ci

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: ${{ secrets.SEMANTIC_RELEASE_GIT_AUTHOR_NAME }}
          GIT_AUTHOR_EMAIL: ${{ secrets.SEMANTIC_RELEASE_GIT_AUTHOR_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.SEMANTIC_RELEASE_GIT_AUTHOR_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.SEMANTIC_RELEASE_GIT_AUTHOR_EMAIL }}
        run: npm run semantic-release -- --ci
